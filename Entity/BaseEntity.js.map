{"version":3,"file":"BaseEntity.js","sourceRoot":"","sources":["../../src/Entity/BaseEntity.ts"],"names":[],"mappings":"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","sourcesContent":["import Game from \"../Game\";\nimport Vector from \"../Vector\";\nimport Entity from \"./Entity\";\n\n/**\n * An entity that is visible and has physics\n */\nexport default class BaseEntity extends Entity {\n  public position: Vector;\n  public velocity: Vector;\n\n  public name: string;\n\n  public size: number;\n  public friction: number;\n  public restLength: number;\n  public resistance: number;\n  public knockback: number;\n\n  public collides: boolean;\n  public detectsCollision: boolean;\n  public isAffectedByRope: boolean;\n  public isAffectedByWind: boolean;\n\n  constructor(game: Game) {\n    super(game);\n\n    this.position = Vector.fromPolar(Math.random() * 7, (Math.random() * Math.sqrt(this.game.size)) ** 2);\n    this.velocity = new Vector(0, 0);\n\n    this.name = \"\";\n\n    this.size = 0;\n    this.friction = 0.95;\n    this.restLength = 0;\n    this.knockback = 0.9;\n    this.resistance = 0.9;\n\n    this.collides = false;\n    this.detectsCollision = false;\n    this.isAffectedByRope = false;\n    this.isAffectedByWind = false;\n  }\n\n  get area() {\n    return Math.PI * this.size ** 2;\n  }\n\n  set area(v: number) {\n    this.size = Math.sqrt(v / Math.PI)\n  }\n\n  applyForce(theta: number, distance: number, polar = true) {\n    const addedVel = polar ? Vector.fromPolar(theta, distance) : new Vector(theta, distance);\n\n    this.velocity = this.velocity.add(addedVel)\n  }\n\n  onCollisionCallback(entity: BaseEntity) {}\n\n  collideWith(entities: Set<BaseEntity>) {\n    entities.forEach((entity: BaseEntity) => {\n      if (entity.detectsCollision) this.onCollisionCallback(entity);\n\n      if (!entity.collides || !this.collides) return;\n      const delta = this.position.subtract(entity.position);\n      const deltaDir = delta.dir;\n\n      this.applyForce(deltaDir, entity.knockback * this.resistance);\n      entity.applyForce(deltaDir + Math.PI, this.knockback * entity.resistance);\n    });\n  }\n\n  findCollisions(): Set<BaseEntity> {\n    const ret: Set<BaseEntity> = new Set();\n\n    if (!this.detectsCollision) return ret;\n\n    /** @ts-ignore */\n    this.game.spatialHashing.query(this).forEach((entity: BaseEntity) => {\n      const delta = entity.position.subtract(this.position);\n      const distance = delta.mag;\n      const collisionDistance = entity.size + this.size;\n\n      if (distance < collisionDistance) ret.add(entity);\n    });\n\n    return ret;\n  }\n\n  tick(tick: number) {\n    super.tick(tick);\n\n    this.velocity = this.velocity.scale(this.friction);\n    this.position = this.position.add(this.velocity);\n    this.collideWith(this.findCollisions());\n\n    const mag = this.position.mag;\n\n    if (mag + this.size > this.game.size) {\n      this.applyForce(this.position.dir, -10);\n    }\n\n    if (this.isAffectedByWind) {\n      this.position = this.position.add(Vector.fromPolar(this.game.windDirection, 0.3));\n    }\n  }\n}\n"]}